<mxfile host="65bd71144e">
    <diagram id="k1yiFRGL5xsYk5cQevov" name="Page-1">
        <mxGraphModel dx="4250" dy="4770" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="41" style="edgeStyle=none;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="3" target="4" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="43" style="edgeStyle=none;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="3" target="42" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="React" style="rounded=0;whiteSpace=wrap;html=1;fontSize=37;fontStyle=1" parent="1" vertex="1">
                    <mxGeometry x="450" y="100" width="186" height="250" as="geometry"/>
                </mxCell>
                <mxCell id="8" style="edgeStyle=none;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="4" target="5" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="16" style="edgeStyle=none;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="4" target="9" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="Create React App" style="rounded=0;whiteSpace=wrap;html=1;fontSize=25;fontStyle=1;aspect=fixed;fillColor=#6a00ff;strokeColor=#3700CC;fontColor=#ffffff;" parent="1" vertex="1">
                    <mxGeometry y="190" width="227.5" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="Official Create React App" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-425" y="70" width="310" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="It is supported by everything" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="5" vertex="1">
                    <mxGeometry y="26" width="310" height="44" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="It is old, use webpack, so it is slow and large" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="5" vertex="1">
                    <mxGeometry y="70" width="310" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="Vite Build" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-425" y="290" width="310" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="10" value="Vite is a modern build tool, fast and small" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="9" vertex="1">
                    <mxGeometry y="26" width="310" height="44" as="geometry"/>
                </mxCell>
                <mxCell id="11" value="need manual set up for many things like ESLint" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="9" vertex="1">
                    <mxGeometry y="70" width="310" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="19" style="edgeStyle=none;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="12" target="13" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="29" style="edgeStyle=orthogonalEdgeStyle;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="12" target="20" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="-40" y="880" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="30" style="edgeStyle=orthogonalEdgeStyle;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="12" target="23" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="31" style="edgeStyle=orthogonalEdgeStyle;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="12" target="25" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="32" style="edgeStyle=orthogonalEdgeStyle;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="12" target="27" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="12" value="Bundler" style="rounded=0;whiteSpace=wrap;html=1;fontSize=25;fontStyle=1;aspect=fixed;fillColor=#6a00ff;strokeColor=#3700CC;fontColor=#ffffff;" parent="1" vertex="1">
                    <mxGeometry y="590" width="227.5" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="13" value="Why Pre Build" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-425" y="487" width="310" height="276" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="Because we are integrating our app with many different tech, like typescript, react, and CSS tooling.Â " style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="13" vertex="1">
                    <mxGeometry y="26" width="310" height="74" as="geometry"/>
                </mxCell>
                <mxCell id="17" value="Combine: To make all of them work together without any name collision or other problem, we need to build project using build tool" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="13" vertex="1">
                    <mxGeometry y="100" width="310" height="90" as="geometry"/>
                </mxCell>
                <mxCell id="18" value="Code spiliting: After combining all of them for you app, the app might get very big, so we need to slice it and stregitically serve them to client little by little" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="13" vertex="1">
                    <mxGeometry y="190" width="310" height="86" as="geometry"/>
                </mxCell>
                <mxCell id="20" value="Bundler Config" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-425" y="840" width="310" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="21" value="We can config how bundler handle our app" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="20" vertex="1">
                    <mxGeometry y="26" width="310" height="44" as="geometry"/>
                </mxCell>
                <mxCell id="23" value="Loader" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-425" y="960" width="310" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="24" value="Load non-js file to app, like load CSS to DOM" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="23" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="25" value="Plugin" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-425" y="1080" width="310" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="26" value="Analize how big each dependencyÂ " style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="25" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="27" value="Dev Server" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-425" y="1200" width="310" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="28" value="It might come with a Dev server that re bundle and compile your app" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="27" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="33" value="VIte" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-870" y="487" width="310" height="324" as="geometry"/>
                </mxCell>
                <mxCell id="34" value="It use ES6 import export module to bundle js so everything will be fast.Â " style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="33" vertex="1">
                    <mxGeometry y="26" width="310" height="74" as="geometry"/>
                </mxCell>
                <mxCell id="37" value="It use Rollup to bundle app resources" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="33" vertex="1">
                    <mxGeometry y="100" width="310" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="38" value="It does not bundle everything then serve the bundled js to client. It uses module to import everything based on client action" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="33" vertex="1">
                    <mxGeometry y="150" width="310" height="74" as="geometry"/>
                </mxCell>
                <mxCell id="39" value="Html change is reload" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="33" vertex="1">
                    <mxGeometry y="224" width="310" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="40" value="Html change is reload" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="33" vertex="1">
                    <mxGeometry y="274" width="310" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="45" style="edgeStyle=orthogonalEdgeStyle;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;rounded=0;" parent="1" source="42" target="44" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="101" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="42" target="60" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="42" value="Component" style="rounded=0;whiteSpace=wrap;html=1;fontSize=25;fontStyle=1;aspect=fixed;fillColor=#6a00ff;strokeColor=#3700CC;fontColor=#ffffff;" parent="1" vertex="1">
                    <mxGeometry x="429.25" y="-130" width="227.5" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="52" style="edgeStyle=orthogonalEdgeStyle;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;rounded=0;" parent="1" source="44" target="46" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="59" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="44" target="53" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="76" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="44" target="75" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="44" value="JSX" style="rounded=0;whiteSpace=wrap;html=1;fontSize=25;fontStyle=1;aspect=fixed;fillColor=#6a00ff;strokeColor=#3700CC;fontColor=#ffffff;" parent="1" vertex="1">
                    <mxGeometry x="429.25" y="-560" width="227.5" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="46" value="JSX" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="779.25" y="-780" width="310" height="300" as="geometry"/>
                </mxCell>
                <mxCell id="47" value="It is HTML like syntax returned in a component function" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="46" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="112" value="It can only contain one root element or one React Fragment &lt;&gt; &lt;/&gt;" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="46" vertex="1">
                    <mxGeometry y="80" width="310" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="113" value="React Fragment will not add it to the DOM, which results in less nested component" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="46" vertex="1">
                    <mxGeometry y="130" width="310" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="51" value="Each JSX is converted to a React.createElement function call" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="46" vertex="1">
                    <mxGeometry y="180" width="310" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="71" value="JSX does not equal to HTML" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="46" vertex="1">
                    <mxGeometry y="240" width="310" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="73" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="53" target="65" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="74" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="53" target="69" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="122" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="53" target="118" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="131" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="53" target="128" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <Array as="points">
                            <mxPoint x="1550" y="-355"/>
                            <mxPoint x="1550" y="-575"/>
                        </Array>
                    </mxGeometry>
                </mxCell>
                <mxCell id="53" value="JavaScript" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="779.25" y="-420" width="310" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="54" value="We can write js code in JSX inside { }" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="53" vertex="1">
                    <mxGeometry y="26" width="310" height="34" as="geometry"/>
                </mxCell>
                <mxCell id="97" value="We can also wirte js code in { } that return JSX like loop and display a list of componentÂ " style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="53" vertex="1">
                    <mxGeometry y="60" width="310" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="111" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="60" target="108" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="60" value="Component(Function)" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="779.25" y="-190" width="310" height="350" as="geometry"/>
                </mxCell>
                <mxCell id="61" value="React divide a webpage into multiple component" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="60" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="63" value="A component is a function that handles both UI and logic by introducing a reuseable component function that returns JSX" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="60" vertex="1">
                    <mxGeometry y="80" width="310" height="90" as="geometry"/>
                </mxCell>
                <mxCell id="62" value="This combines logic and UI of one component together" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="60" vertex="1">
                    <mxGeometry y="170" width="310" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="64" value="It also seperate the concern of different component with different functionalities" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="60" vertex="1">
                    <mxGeometry y="230" width="310" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="92" value="It is a pure function in functional programming" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="60" vertex="1">
                    <mxGeometry y="290" width="310" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="65" value="Style" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="1190" y="-590" width="310" height="204" as="geometry"/>
                </mxCell>
                <mxCell id="66" value="Inline style is allowd in JSX with specital attribute on a tag called 'style'" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="65" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="67" value="Since JSX != HTML, when we add inline CSS with style attr, we must use camel case for each css property like fontSize" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="65" vertex="1">
                    <mxGeometry y="80" width="310" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="68" value="We can also create a style object and include it in JSX tag with {}" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="65" vertex="1">
                    <mxGeometry y="150" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="69" value="Camel Case" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="1190" y="-780" width="310" height="154" as="geometry"/>
                </mxCell>
                <mxCell id="70" value="Every attribute in a html tag or style attribute in style must be declared in camel Case" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="69" vertex="1">
                    <mxGeometry y="26" width="310" height="64" as="geometry"/>
                </mxCell>
                <mxCell id="72" value="Like &quot;class&quot; in HTML translate to &quot;className&quot; in JSX" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="69" vertex="1">
                    <mxGeometry y="90" width="310" height="64" as="geometry"/>
                </mxCell>
                <mxCell id="94" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="75" target="77" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="95" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="75" target="83" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="123" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="75" target="89" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="75" value="Props" style="rounded=0;whiteSpace=wrap;html=1;fontSize=25;fontStyle=1;aspect=fixed;fillColor=#6a00ff;strokeColor=#3700CC;fontColor=#ffffff;" parent="1" vertex="1">
                    <mxGeometry x="429.25" y="-1080" width="227.5" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="77" value="Props" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="779.25" y="-1330" width="310" height="260" as="geometry"/>
                </mxCell>
                <mxCell id="78" value="Props is the way to pass data in different component following hierachy architecture" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="77" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="116" value="Props is data coming from the Parent" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="77" vertex="1">
                    <mxGeometry y="80" width="310" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="90" value="Props is immutable, because it is passed down to Child Component using object, which is reference. Changing props in Child will result in changing in Parent component" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="77" vertex="1">
                    <mxGeometry y="120" width="310" height="100" as="geometry"/>
                </mxCell>
                <mxCell id="93" value="It is one way data flow" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="77" vertex="1">
                    <mxGeometry y="220" width="310" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="96" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="83" target="85" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="107" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="83" target="102" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="83" value="Parent" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="779.25" y="-990" width="310" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="106" value="Parent declare attributes and value when they include Child Component in their JSX" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="83" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="201" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="85" target="198" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="85" value="Child" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="1190" y="-1010" width="310" height="120" as="geometry"/>
                </mxCell>
                <mxCell id="86" value="Child Component can receive data passed from Parent Component by placing a para in Child Component function and use it as object like probs.something" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="85" vertex="1">
                    <mxGeometry y="26" width="310" height="94" as="geometry"/>
                </mxCell>
                <mxCell id="166" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="89" target="114" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="173" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="89" target="160" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="89" value="State" style="rounded=0;whiteSpace=wrap;html=1;fontSize=25;fontStyle=1;aspect=fixed;fillColor=#6a00ff;strokeColor=#3700CC;fontColor=#ffffff;" parent="1" vertex="1">
                    <mxGeometry x="429.25" y="-1623" width="227.5" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="102" value="Unique Key" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="1190" y="-1234" width="310" height="184" as="geometry"/>
                </mxCell>
                <mxCell id="103" value="When we render multiple same Child Component inside a Parent Component, it is desirable to pass a &quot;key&quot; props that holds a unique identification to each of these Child Component" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="102" vertex="1">
                    <mxGeometry y="26" width="310" height="104" as="geometry"/>
                </mxCell>
                <mxCell id="84" value="It helps optimize the React app" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="102" vertex="1">
                    <mxGeometry y="130" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="108" value="Null" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="1190" y="-190" width="310" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="109" value="If a component return &quot;null&quot;, that means it does not create any HTML element" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="108" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="167" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="114" target="133" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="114" value="State" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="779.25" y="-1750" width="310" height="324" as="geometry"/>
                </mxCell>
                <mxCell id="117" value="State is data inside a component" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="114" vertex="1">
                    <mxGeometry y="26" width="310" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="150" value="State variable is stored within the app, it wont change unless we refress the page" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="114" vertex="1">
                    <mxGeometry y="66" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="132" value="React use hook to initialize a state variable and update its value" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="114" vertex="1">
                    <mxGeometry y="120" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="136" value="Everytime a state of a component get updated, the component re-rendered, which means react recreate the component" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="114" vertex="1">
                    <mxGeometry y="174" width="310" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="149" value="State should not be mutate, hook provide a updatefunc to unpdate it by creating a new state variable without mutating the original" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="114" vertex="1">
                    <mxGeometry y="244" width="310" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="118" value="Nested JS" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="1610" y="-455" width="310" height="200" as="geometry"/>
                </mxCell>
                <mxCell id="119" value="Since JSX is converted to React function call, we can nest JS code in attribute and html tag" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="118" vertex="1">
                    <mxGeometry y="26" width="310" height="74" as="geometry"/>
                </mxCell>
                <mxCell id="121" value="&lt;h1 className=&quot;pizza&quot;&gt;&lt;/h1&gt;&#10;&lt;h1 className={variable}&gt;&lt;/h1&gt;&#10;&lt;h1 className={`pizza ${isTrue?&quot;other&quot;,&quot;&quot;}`}&gt;&lt;/h1&gt;" style="text;strokeColor=#23445d;fillColor=#CCFFE6;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="118" vertex="1">
                    <mxGeometry y="100" width="310" height="100" as="geometry"/>
                </mxCell>
                <mxCell id="128" value="Event" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="1610" y="-660" width="310" height="170" as="geometry"/>
                </mxCell>
                <mxCell id="129" value="JSX has many event handlers attribute which are corresponding to HTML version like onClick = {callback}" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="128" vertex="1">
                    <mxGeometry y="26" width="310" height="74" as="geometry"/>
                </mxCell>
                <mxCell id="130" value="However, since JSX is read by React function, we must put event callback function signature instead of function call" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="128" vertex="1">
                    <mxGeometry y="100" width="310" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="176" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="133" target="153" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="133" value="UseState" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="1190" y="-1750" width="310" height="270" as="geometry"/>
                </mxCell>
                <mxCell id="140" value="It is a react hook that create a component state variable" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="133" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="138" value="import {useState} from &quot;react&quot;;&#10;const [statevar, updatefunc] = useState(default value);" style="text;strokeColor=#23445d;fillColor=#CCFFE6;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="133" vertex="1">
                    <mxGeometry y="80" width="310" height="76" as="geometry"/>
                </mxCell>
                <mxCell id="139" value="updatefunc must be called inside a callback function" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="133" vertex="1">
                    <mxGeometry y="156" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="141" value="It can not be called in any conditional statement" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="133" vertex="1">
                    <mxGeometry y="210" width="310" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="153" value="UpdateFunc" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="1620" y="-1750" width="310" height="190" as="geometry"/>
                </mxCell>
                <mxCell id="159" value="This updates the value of statevar. We pass a function to updatefunc because it is safe and we can chain updatefunc call" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="153" vertex="1">
                    <mxGeometry y="26" width="310" height="74" as="geometry"/>
                </mxCell>
                <mxCell id="158" value="function callback() {&#10;Â Â Â Â updatefunc((state)=&gt;state+1);&#10;Â  Â  updatefunc((state)=&gt;state+1);&#10;}" style="text;strokeColor=#23445d;fillColor=#CCFFE6;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="153" vertex="1">
                    <mxGeometry y="100" width="310" height="90" as="geometry"/>
                </mxCell>
                <mxCell id="174" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="160" target="161" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="175" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="160" target="170" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="160" value="Form" style="rounded=0;whiteSpace=wrap;html=1;fontSize=25;fontStyle=1;aspect=fixed;fillColor=#6a00ff;strokeColor=#3700CC;fontColor=#ffffff;" parent="1" vertex="1">
                    <mxGeometry x="429.25" y="-2090" width="227.5" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="161" value="Form" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="779.25" y="-2262" width="310" height="214" as="geometry"/>
                </mxCell>
                <mxCell id="168" value="Use preventDefault to preven page refress triggered by form submit" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="161" vertex="1">
                    <mxGeometry y="26" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="163" value="JSX: onSubmit={submitCall}&#10;Component js:Â &#10;Â Â Â Â function submitCall(e){&#10;Â Â Â Â Â Â Â Â e.preventDefault();&#10;Â Â Â Â Â Â Â Â //other logic&#10;Â Â Â Â }" style="text;strokeColor=#23445d;fillColor=#CCFFE6;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="161" vertex="1">
                    <mxGeometry y="80" width="310" height="134" as="geometry"/>
                </mxCell>
                <mxCell id="170" value="Control value" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="779.25" y="-1980" width="310" height="140" as="geometry"/>
                </mxCell>
                <mxCell id="171" value="Use State variable to store each form value" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="170" vertex="1">
                    <mxGeometry y="26" width="310" height="44" as="geometry"/>
                </mxCell>
                <mxCell id="172" value="JSX: onChange={(e)=&gt;updateFunc(e.target.value)}" style="text;strokeColor=#23445d;fillColor=#CCFFE6;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="170" vertex="1">
                    <mxGeometry y="70" width="310" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="188" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="177" target="178" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="189" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="177" target="184" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="177" value="State &lt;br&gt;Management" style="rounded=0;whiteSpace=wrap;html=1;fontSize=25;fontStyle=1;aspect=fixed;fillColor=#6a00ff;strokeColor=#3700CC;fontColor=#ffffff;" parent="1" vertex="1">
                    <mxGeometry x="-170" y="-1623" width="227.5" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="178" value="Global State" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-590" y="-1740" width="310" height="120" as="geometry"/>
                </mxCell>
                <mxCell id="179" value="It is used in entire React APP" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="178" vertex="1">
                    <mxGeometry y="26" width="310" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="180" value="There are thrid party tool like Redux that manage these states" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="178" vertex="1">
                    <mxGeometry y="66" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="184" value="Local State" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-590" y="-1530" width="310" height="120" as="geometry"/>
                </mxCell>
                <mxCell id="185" value="Reside in a component" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="184" vertex="1">
                    <mxGeometry y="26" width="310" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="186" value="Can only be accessed by that component and its child as propsÂ " style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="184" vertex="1">
                    <mxGeometry y="66" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="190" value="Lifting a State" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-1000" y="-1740" width="310" height="340" as="geometry"/>
                </mxCell>
                <mxCell id="191" value="Sometimes, a state in a component might end up being used in sibling components. That means we must lift a state one step up" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="190" vertex="1">
                    <mxGeometry y="26" width="310" height="94" as="geometry"/>
                </mxCell>
                <mxCell id="192" value="State variable then should be pass down as props" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="190" vertex="1">
                    <mxGeometry y="120" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="193" value="updateFuc should also be pass down as props with naming comvention &quot;onUpdateFunc&quot;" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="190" vertex="1">
                    <mxGeometry y="174" width="310" height="66" as="geometry"/>
                </mxCell>
                <mxCell id="194" value="React brings clear seperation and functional programing to its app, therefore, sibiling component should not communicate about their state variables" style="text;strokeColor=#C73500;fillColor=#fa6800;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#FFFFFF;spacing=7;whiteSpace=wrap;" parent="190" vertex="1">
                    <mxGeometry y="240" width="310" height="100" as="geometry"/>
                </mxCell>
                <mxCell id="195" value="Derived State" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="-590" y="-1330" width="310" height="154" as="geometry"/>
                </mxCell>
                <mxCell id="196" value="To prevent using many state which cause many component refresh, we can use Derived State" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="195" vertex="1">
                    <mxGeometry y="26" width="310" height="74" as="geometry"/>
                </mxCell>
                <mxCell id="197" value="A Derived State is just a local variable that is obtained by manipulate a State or a Prop" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="195" vertex="1">
                    <mxGeometry y="100" width="310" height="54" as="geometry"/>
                </mxCell>
                <mxCell id="198" value="Children Props" style="swimlane;fontStyle=1;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#FFFF33;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=none;strokeColor=#23445d;fontSize=17;swimlaneLine=1;verticalAlign=middle;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="1" vertex="1">
                    <mxGeometry x="1610" y="-1054" width="310" height="164" as="geometry"/>
                </mxCell>
                <mxCell id="199" value="When declaring a Child Compnent, any JSX markup that is written inbetween Child Component tag is added to props.children" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="198" vertex="1">
                    <mxGeometry y="26" width="310" height="84" as="geometry"/>
                </mxCell>
                <mxCell id="200" value="Thi Child Component will automatically receive the tag with props.children" style="text;strokeColor=#23445d;fillColor=#FFFF33;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=none;fontSize=15;fontColor=#000000;spacing=7;whiteSpace=wrap;" parent="198" vertex="1">
                    <mxGeometry y="110" width="310" height="54" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>